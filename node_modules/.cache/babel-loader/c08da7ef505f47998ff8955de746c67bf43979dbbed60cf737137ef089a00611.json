{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavmamaev/Documents/\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430/WebShtorm/web_site_react/src/contexts/DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { format, addDays, subDays } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useData = () => {\n  _s();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n_s(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  // Базовые данные студента\n  const [student, setStudent] = useState({\n    id: 1,\n    firstName: 'Александр',\n    lastName: 'Петров',\n    email: 'alex.petrov@student.university.ru',\n    phone: '+7 (999) 123-45-67',\n    birthDate: '1998-03-15',\n    address: 'г. Москва, ул. Студенческая, д. 10, кв. 25',\n    group: 'SE',\n    course: 1,\n    specialty: 'Информационные технологии',\n    bio: 'Студент 3 курса факультета информационных технологий. Увлекаюсь программированием и веб-разработкой.',\n    avatar: null,\n    enrollmentDate: '2021-09-01'\n  });\n\n  // Предметы\n  const [subjects] = useState([{\n    id: 1,\n    name: 'Программирование',\n    teacher: 'Иванов А.А.',\n    credits: 4,\n    color: '#3b82f6'\n  }, {\n    id: 2,\n    name: 'Математический анализ',\n    teacher: 'Петрова М.В.',\n    credits: 3,\n    color: '#10b981'\n  }, {\n    id: 3,\n    name: 'Веб-разработка',\n    teacher: 'Волков Д.М.',\n    credits: 3,\n    color: '#f59e0b'\n  }, {\n    id: 4,\n    name: 'Базы данных',\n    teacher: 'Козлов В.П.',\n    credits: 4,\n    color: '#8b5cf6'\n  }, {\n    id: 5,\n    name: 'Алгоритмы и структуры данных',\n    teacher: 'Иванов А.А.',\n    credits: 3,\n    color: '#ef4444'\n  }, {\n    id: 6,\n    name: 'Английский язык',\n    teacher: 'Смирнова О.И.',\n    credits: 2,\n    color: '#06b6d4'\n  }, {\n    id: 7,\n    name: 'Физика',\n    teacher: 'Николаев С.С.',\n    credits: 3,\n    color: '#84cc16'\n  }, {\n    id: 8,\n    name: 'Философия',\n    teacher: 'Морозова Л.К.',\n    credits: 2,\n    color: '#f97316'\n  }, {\n    id: 9,\n    name: 'История',\n    teacher: 'Белова Н.Р.',\n    credits: 2,\n    color: '#ec4899'\n  }, {\n    id: 10,\n    name: 'Физическая культура',\n    teacher: 'Соколов И.Н.',\n    credits: 1,\n    color: '#14b8a6'\n  }]);\n\n  // Оценки\n  const [grades, setGrades] = useState([{\n    id: 1,\n    subjectId: 1,\n    value: 5,\n    date: '2024-03-01',\n    type: 'exam',\n    weight: 1.0\n  }, {\n    id: 2,\n    subjectId: 1,\n    value: 4,\n    date: '2024-02-15',\n    type: 'lab',\n    weight: 0.5\n  }, {\n    id: 3,\n    subjectId: 1,\n    value: 5,\n    date: '2024-02-01',\n    type: 'homework',\n    weight: 0.3\n  }, {\n    id: 4,\n    subjectId: 2,\n    value: 4,\n    date: '2024-03-05',\n    type: 'exam',\n    weight: 1.0\n  }, {\n    id: 5,\n    subjectId: 2,\n    value: 5,\n    date: '2024-02-20',\n    type: 'test',\n    weight: 0.7\n  }, {\n    id: 6,\n    subjectId: 3,\n    value: 5,\n    date: '2024-03-10',\n    type: 'project',\n    weight: 1.0\n  }, {\n    id: 7,\n    subjectId: 3,\n    value: 4,\n    date: '2024-02-25',\n    type: 'lab',\n    weight: 0.5\n  }, {\n    id: 8,\n    subjectId: 4,\n    value: 4,\n    date: '2024-03-08',\n    type: 'exam',\n    weight: 1.0\n  }, {\n    id: 9,\n    subjectId: 4,\n    value: 5,\n    date: '2024-02-18',\n    type: 'lab',\n    weight: 0.5\n  }, {\n    id: 10,\n    subjectId: 5,\n    value: 3,\n    date: '2024-02-10',\n    type: 'test',\n    weight: 0.7\n  }]);\n\n  // Расписание\n  const [schedule] = useState({\n    0: {\n      // Понедельник\n      '09:00': {\n        subjectId: 1,\n        type: 'Лекция',\n        room: 'Ауд. 205',\n        duration: 90\n      },\n      '10:45': {\n        subjectId: 2,\n        type: 'Семинар',\n        room: 'Ауд. 301',\n        duration: 90\n      },\n      '12:30': {\n        subjectId: 6,\n        type: 'Практика',\n        room: 'Ауд. 112',\n        duration: 90\n      }\n    },\n    1: {\n      // Вторник\n      '09:00': {\n        subjectId: 4,\n        type: 'Лекция',\n        room: 'Ауд. 308',\n        duration: 90\n      },\n      '10:45': {\n        subjectId: 7,\n        type: 'Лабораторная',\n        room: 'Лаб. 15',\n        duration: 90\n      }\n    },\n    2: {\n      // Среда\n      '09:00': {\n        subjectId: 5,\n        type: 'Лекция',\n        room: 'Ауд. 205',\n        duration: 90\n      },\n      '12:30': {\n        subjectId: 8,\n        type: 'Семинар',\n        room: 'Ауд. 401',\n        duration: 90\n      }\n    },\n    3: {\n      // Четверг\n      '10:45': {\n        subjectId: 3,\n        type: 'Практика',\n        room: 'Комп. класс 1',\n        duration: 90\n      },\n      '14:15': {\n        subjectId: 9,\n        type: 'Лекция',\n        room: 'Ауд. 201',\n        duration: 90\n      }\n    },\n    4: {\n      // Пятница\n      '09:00': {\n        subjectId: 1,\n        type: 'Практика',\n        room: 'Комп. класс 2',\n        duration: 90\n      },\n      '10:45': {\n        subjectId: 2,\n        type: 'Лекция',\n        room: 'Ауд. 301',\n        duration: 90\n      }\n    },\n    5: {\n      // Суббота\n      '09:00': {\n        subjectId: 10,\n        type: 'Практика',\n        room: 'Спортзал',\n        duration: 90\n      }\n    }\n  });\n\n  // Задачи\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'Сдать лабораторную по программированию',\n    subjectId: 1,\n    completed: false,\n    priority: 'high',\n    dueDate: '2024-03-20',\n    createdAt: '2024-03-15'\n  }, {\n    id: 2,\n    title: 'Прочитать главу 5 по математике',\n    subjectId: 2,\n    completed: true,\n    priority: 'medium',\n    dueDate: '2024-03-18',\n    createdAt: '2024-03-10'\n  }, {\n    id: 3,\n    title: 'Подготовить презентацию по веб-разработке',\n    subjectId: 3,\n    completed: false,\n    priority: 'high',\n    dueDate: '2024-03-25',\n    createdAt: '2024-03-16'\n  }, {\n    id: 4,\n    title: 'Повторить алгоритмы сортировки',\n    subjectId: 5,\n    completed: false,\n    priority: 'low',\n    dueDate: '2024-03-22',\n    createdAt: '2024-03-14'\n  }, {\n    id: 5,\n    title: 'Выполнить практическую работу по БД',\n    subjectId: 4,\n    completed: false,\n    priority: 'medium',\n    dueDate: '2024-03-21',\n    createdAt: '2024-03-12'\n  }]);\n\n  // Уведомления\n  const [notifications, setNotifications] = useState([{\n    id: 1,\n    type: 'urgent',\n    title: 'Изменения в расписании',\n    message: 'Занятие по математике 16 марта переносится на 14:00',\n    time: '10 минут назад',\n    read: false,\n    timestamp: new Date(Date.now() - 10 * 60 * 1000),\n    relatedSubjectId: 2\n  }, {\n    id: 2,\n    type: 'info',\n    title: 'Новое задание',\n    message: 'Преподаватель добавил новое задание по программированию',\n    time: '1 час назад',\n    read: false,\n    timestamp: new Date(Date.now() - 60 * 60 * 1000),\n    relatedSubjectId: 1\n  }, {\n    id: 3,\n    type: 'success',\n    title: 'Оценка выставлена',\n    message: 'За лабораторную работу №3 по базам данных выставлена оценка \"отлично\"',\n    time: '3 часа назад',\n    read: true,\n    timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000),\n    relatedSubjectId: 4\n  }, {\n    id: 4,\n    type: 'warning',\n    title: 'Приближается дедлайн',\n    message: 'До сдачи курсовой работы осталось 3 дня',\n    time: '6 часов назад',\n    read: false,\n    timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\n    relatedSubjectId: 3\n  }]);\n\n  // Новости\n  const [news, setNews] = useState([{\n    id: 1,\n    title: 'Новая система электронного обучения',\n    content: 'Университет запускает новую платформу для дистанционного обучения. Система включает в себя интерактивные лекции, онлайн-тестирование и возможность обратной связи с преподавателями в реальном времени.',\n    fullContent: 'Университет анонсировал запуск революционной системы электронного обучения, которая станет новым стандартом образования. Платформа разработана с учетом современных требований и включает множество инновационных функций для студентов и преподавателей.',\n    date: '15 мар 2024',\n    author: 'Администрация',\n    category: 'academic',\n    image: null,\n    tags: ['образование', 'технологии', 'онлайн']\n  }, {\n    id: 2,\n    title: 'Студенческая научная конференция',\n    content: 'Приглашаем всех студентов принять участие в ежегодной конференции \"Молодая наука - 2024\". Прием заявок до 25 марта.',\n    fullContent: 'Научная конференция \"Молодая наука - 2024\" пройдет в формате очно-заочного участия. Студенты смогут представить свои исследования в различных секциях по информационным технологиям, математике и другим дисциплинам.',\n    date: '10 мар 2024',\n    author: 'Научная часть',\n    category: 'events',\n    image: null,\n    tags: ['конференция', 'наука', 'студенты']\n  }, {\n    id: 3,\n    title: 'Изменения в расписании',\n    content: 'Внимание! С 18 марта временно изменяется расписание занятий для групп ИТ-21 и ИТ-22 в связи с ремонтными работами.',\n    fullContent: 'В связи с плановыми ремонтными работами в учебном корпусе №2, администрация уведомляет об изменениях в расписании. Занятия будут перенесены в резервные аудитории.',\n    date: '8 мар 2024',\n    author: 'Учебная часть',\n    category: 'announcements',\n    image: null,\n    tags: ['расписание', 'ремонт', 'важно']\n  }]);\n\n  // Достижения\n  const [achievements, setAchievements] = useState([{\n    id: 1,\n    title: 'Отличник учёбы',\n    description: 'За высокие академические результаты',\n    date: '2024-01-15',\n    icon: '🏆',\n    criteria: 'average_grade >= 4.5'\n  }, {\n    id: 2,\n    title: 'Лучший проект',\n    description: 'За инновационный веб-проект',\n    date: '2023-12-10',\n    icon: '💻',\n    criteria: 'project_grade >= 5'\n  }, {\n    id: 3,\n    title: 'Активный студент',\n    description: 'За участие в студенческой жизни',\n    date: '2023-10-05',\n    icon: '⭐',\n    criteria: 'activity_score >= 80'\n  }]);\n\n  // Настройки\n  const [settings, setSettings] = useState({\n    emailNotifications: true,\n    pushNotifications: false,\n    weeklyReport: true,\n    gradeNotifications: true,\n    theme: 'light',\n    language: 'ru'\n  });\n\n  // Загрузка данных из localStorage при инициализации\n  useEffect(() => {\n    const savedData = localStorage.getItem('uniportal_data');\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        if (parsedData.student) setStudent(parsedData.student);\n        if (parsedData.grades) setGrades(parsedData.grades);\n        if (parsedData.tasks) setTasks(parsedData.tasks);\n        if (parsedData.notifications) setNotifications(parsedData.notifications);\n        if (parsedData.news) setNews(parsedData.news);\n        if (parsedData.achievements) setAchievements(parsedData.achievements);\n        if (parsedData.settings) setSettings(parsedData.settings);\n      } catch (error) {\n        console.error('Ошибка загрузки данных:', error);\n      }\n    }\n\n    // Синхронизация с данными профиля\n    syncWithProfile();\n  }, []);\n\n  // Синхронизация с данными профиля\n  const syncWithProfile = () => {\n    const profileData = localStorage.getItem('studentProfile');\n    if (profileData) {\n      try {\n        const parsedProfile = JSON.parse(profileData);\n        setStudent(prev => ({\n          ...prev,\n          firstName: parsedProfile.firstName || prev.firstName,\n          lastName: parsedProfile.lastName || prev.lastName,\n          email: parsedProfile.email || prev.email,\n          phone: parsedProfile.phone || prev.phone,\n          birthDate: parsedProfile.birthDate || prev.birthDate,\n          group: parsedProfile.group || prev.group,\n          course: parsedProfile.course || prev.course,\n          specialty: parsedProfile.specialty || prev.specialty,\n          bio: parsedProfile.bio || prev.bio,\n          avatar: parsedProfile.avatar || prev.avatar\n        }));\n      } catch (error) {\n        console.error('Ошибка синхронизации с профилем:', error);\n      }\n    }\n  };\n\n  // Слушаем изменения в localStorage профиля\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === 'studentProfile') {\n        syncWithProfile();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Сохранение данных в localStorage при изменении\n  useEffect(() => {\n    const dataToSave = {\n      student,\n      grades,\n      tasks,\n      notifications,\n      news,\n      achievements,\n      settings\n    };\n    localStorage.setItem('uniportal_data', JSON.stringify(dataToSave));\n  }, [student, grades, tasks, notifications, news, achievements, settings]);\n\n  // Вычисляемые значения\n  const getSubjectById = id => subjects.find(s => s.id === id);\n  const getGradesBySubject = subjectId => grades.filter(g => g.subjectId === subjectId);\n  const calculateAverageGrade = () => {\n    if (grades.length === 0) return 0;\n    const totalWeight = grades.reduce((sum, grade) => sum + grade.weight, 0);\n    const weightedSum = grades.reduce((sum, grade) => sum + grade.value * grade.weight, 0);\n    return Math.round(weightedSum / totalWeight * 10) / 10;\n  };\n  const getSubjectAverageGrade = subjectId => {\n    const subjectGrades = getGradesBySubject(subjectId);\n    if (subjectGrades.length === 0) return null;\n    const totalWeight = subjectGrades.reduce((sum, grade) => sum + grade.weight, 0);\n    const weightedSum = subjectGrades.reduce((sum, grade) => sum + grade.value * grade.weight, 0);\n    return Math.round(weightedSum / totalWeight * 10) / 10;\n  };\n  const getAttendanceRate = () => {\n    // Симуляция расчета посещаемости\n    const totalClasses = 48;\n    const attendedClasses = 44;\n    return Math.round(attendedClasses / totalClasses * 100);\n  };\n  const getCompletedTasksCount = () => tasks.filter(task => task.completed).length;\n  const getTotalTasksCount = () => tasks.length;\n  const getUnreadNotificationsCount = () => notifications.filter(notif => !notif.read).length;\n  const getScheduleForDay = dayIndex => {\n    const daySchedule = schedule[dayIndex] || {};\n    return Object.entries(daySchedule).map(([time, classInfo]) => ({\n      time,\n      ...classInfo,\n      subject: getSubjectById(classInfo.subjectId)\n    }));\n  };\n  const getTasksForToday = () => {\n    const today = format(new Date(), 'yyyy-MM-dd');\n    return tasks.filter(task => task.dueDate === today);\n  };\n  const getOverdueTasks = () => {\n    const today = format(new Date(), 'yyyy-MM-dd');\n    return tasks.filter(task => task.dueDate < today && !task.completed);\n  };\n  const getUpcomingTasks = () => {\n    const today = format(new Date(), 'yyyy-MM-dd');\n    const nextWeek = format(addDays(new Date(), 7), 'yyyy-MM-dd');\n    return tasks.filter(task => task.dueDate > today && task.dueDate <= nextWeek);\n  };\n\n  // Функции для изменения данных\n  const updateStudent = newData => {\n    setStudent(prev => ({\n      ...prev,\n      ...newData\n    }));\n  };\n  const addGrade = newGrade => {\n    const gradeWithId = {\n      ...newGrade,\n      id: Date.now()\n    };\n    setGrades(prev => [...prev, gradeWithId]);\n\n    // Создаем уведомление о новой оценке\n    const subject = getSubjectById(newGrade.subjectId);\n    const notification = {\n      id: Date.now() + 1,\n      type: 'success',\n      title: 'Новая оценка',\n      message: `Выставлена оценка ${newGrade.value} по предмету \"${subject.name}\"`,\n      time: 'Только что',\n      read: false,\n      timestamp: new Date(),\n      relatedSubjectId: newGrade.subjectId\n    };\n    setNotifications(prev => [notification, ...prev]);\n  };\n  const updateGrade = (gradeId, newValue) => {\n    setGrades(prev => prev.map(grade => grade.id === gradeId ? {\n      ...grade,\n      value: newValue\n    } : grade));\n  };\n  const addTask = newTask => {\n    const taskWithId = {\n      ...newTask,\n      id: Date.now(),\n      createdAt: format(new Date(), 'yyyy-MM-dd')\n    };\n    setTasks(prev => [...prev, taskWithId]);\n  };\n  const updateTask = (taskId, updates) => {\n    setTasks(prev => prev.map(task => task.id === taskId ? {\n      ...task,\n      ...updates\n    } : task));\n  };\n  const deleteTask = taskId => {\n    setTasks(prev => prev.filter(task => task.id !== taskId));\n  };\n\n  // Функции для быстрого редактирования задач\n  const addQuickTask = title => {\n    if (!title.trim()) return;\n    const newTask = {\n      id: Date.now(),\n      title: title.trim(),\n      subjectId: null,\n      completed: false,\n      priority: 'medium',\n      dueDate: format(new Date(), 'yyyy-MM-dd'),\n      createdAt: format(new Date(), 'yyyy-MM-dd')\n    };\n    setTasks(prev => [...prev, newTask]);\n    return newTask.id;\n  };\n  const updateTaskTitle = (taskId, newTitle) => {\n    if (!newTitle.trim()) {\n      deleteTask(taskId);\n      return;\n    }\n    setTasks(prev => prev.map(task => task.id === taskId ? {\n      ...task,\n      title: newTitle.trim()\n    } : task));\n  };\n  const toggleTaskCompleted = taskId => {\n    setTasks(prev => prev.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const markNotificationAsRead = notificationId => {\n    setNotifications(prev => prev.map(notif => notif.id === notificationId ? {\n      ...notif,\n      read: true\n    } : notif));\n  };\n  const markAllNotificationsAsRead = () => {\n    setNotifications(prev => prev.map(notif => ({\n      ...notif,\n      read: true\n    })));\n  };\n  const deleteNotification = notificationId => {\n    setNotifications(prev => prev.filter(notif => notif.id !== notificationId));\n  };\n  const addNews = newNews => {\n    const newsWithId = {\n      ...newNews,\n      id: Date.now()\n    };\n    setNews(prev => [newsWithId, ...prev]);\n  };\n  const updateSettings = newSettings => {\n    setSettings(prev => ({\n      ...prev,\n      ...newSettings\n    }));\n  };\n  const addAchievement = newAchievement => {\n    const achievementWithId = {\n      ...newAchievement,\n      id: Date.now()\n    };\n    setAchievements(prev => [...prev, achievementWithId]);\n  };\n\n  // Статистические данные для диаграмм\n  const getGradesChartData = () => {\n    const months = ['Сен', 'Окт', 'Ноя', 'Дек', 'Янв', 'Фев', 'Мар'];\n\n    // Создаем реалистичную прогрессию с трендом улучшения\n    const baseGrades = [3.6, 3.8, 4.1, 4.3, 4.5, 4.6, 4.7];\n    const attendance = [82, 85, 88, 90, 92, 94, 95];\n    const activity = [65, 70, 75, 80, 85, 87, 90];\n    const assignments = [8, 10, 12, 14, 16, 18, 20];\n    return months.map((month, index) => ({\n      month,\n      grade: baseGrades[index],\n      attendance: attendance[index],\n      activity: activity[index],\n      assignments: assignments[index],\n      trend: index > 0 ? baseGrades[index] - baseGrades[index - 1] : 0\n    }));\n  };\n  const getSubjectsChartData = () => {\n    return subjects.slice(0, 6).map(subject => {\n      const avgGrade = getSubjectAverageGrade(subject.id);\n      const complexity = {\n        1: 85,\n        // Программирование\n        2: 78,\n        // Математический анализ\n        3: 92,\n        // Веб-разработка\n        4: 88,\n        // Базы данных\n        5: 82,\n        // Алгоритмы\n        6: 95 // Английский язык\n      };\n      return {\n        name: subject.name.length > 15 ? subject.name.substring(0, 15) + '...' : subject.name,\n        fullName: subject.name,\n        grade: avgGrade || 3.5 + Math.random() * 1.5,\n        progress: complexity[subject.id] || 85,\n        credits: subject.credits,\n        color: subject.color,\n        difficulty: subject.id === 2 || subject.id === 5 ? 'hard' : subject.id === 6 || subject.id === 10 ? 'easy' : 'medium'\n      };\n    });\n  };\n  const getPerformanceAnalytics = () => {\n    const currentMonth = new Date().getMonth();\n    const months = ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'];\n\n    // Данные за последние 12 месяцев\n    const data = [];\n    for (let i = 11; i >= 0; i--) {\n      const monthIndex = (currentMonth - i + 12) % 12;\n      const progress = Math.max(0, Math.min(100, 60 + (11 - i) * 3 + Math.random() * 10));\n      data.push({\n        month: months[monthIndex],\n        performance: Math.round(progress * 10) / 10,\n        quality: Math.round((progress * 0.9 + Math.random() * 10) * 10) / 10,\n        effort: Math.round((progress * 1.1 - Math.random() * 5) * 10) / 10,\n        consistency: Math.round((85 + Math.random() * 15) * 10) / 10\n      });\n    }\n    return data;\n  };\n  const getSubjectDistribution = () => {\n    const totalCredits = subjects.reduce((sum, subject) => sum + subject.credits, 0);\n    return subjects.map(subject => ({\n      name: subject.name,\n      value: subject.credits,\n      percentage: Math.round(subject.credits / totalCredits * 100),\n      color: subject.color,\n      status: getSubjectAverageGrade(subject.id) >= 4.5 ? 'excellent' : getSubjectAverageGrade(subject.id) >= 4.0 ? 'good' : getSubjectAverageGrade(subject.id) >= 3.5 ? 'satisfactory' : 'needs_improvement'\n    }));\n  };\n  const value = {\n    // Данные\n    student,\n    subjects,\n    grades,\n    schedule,\n    tasks,\n    notifications,\n    news,\n    achievements,\n    settings,\n    // Вычисляемые значения\n    getSubjectById,\n    getGradesBySubject,\n    calculateAverageGrade,\n    getSubjectAverageGrade,\n    getAttendanceRate,\n    getCompletedTasksCount,\n    getTotalTasksCount,\n    getUnreadNotificationsCount,\n    getScheduleForDay,\n    getTasksForToday,\n    getOverdueTasks,\n    getUpcomingTasks,\n    getGradesChartData,\n    getSubjectsChartData,\n    getPerformanceAnalytics,\n    getSubjectDistribution,\n    // Функции изменения данных\n    updateStudent,\n    addGrade,\n    updateGrade,\n    addTask,\n    updateTask,\n    deleteTask,\n    addQuickTask,\n    updateTaskTitle,\n    toggleTaskCompleted,\n    markNotificationAsRead,\n    markAllNotificationsAsRead,\n    deleteNotification,\n    addNews,\n    updateSettings,\n    addAchievement,\n    syncWithProfile\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 631,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"smSQFYobsHXcpxocIxbd6v06pjs=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","format","addDays","subDays","ru","jsxDEV","_jsxDEV","DataContext","useData","_s","context","Error","DataProvider","children","_s2","student","setStudent","id","firstName","lastName","email","phone","birthDate","address","group","course","specialty","bio","avatar","enrollmentDate","subjects","name","teacher","credits","color","grades","setGrades","subjectId","value","date","type","weight","schedule","room","duration","tasks","setTasks","title","completed","priority","dueDate","createdAt","notifications","setNotifications","message","time","read","timestamp","Date","now","relatedSubjectId","news","setNews","content","fullContent","author","category","image","tags","achievements","setAchievements","description","icon","criteria","settings","setSettings","emailNotifications","pushNotifications","weeklyReport","gradeNotifications","theme","language","savedData","localStorage","getItem","parsedData","JSON","parse","error","console","syncWithProfile","profileData","parsedProfile","prev","handleStorageChange","e","key","window","addEventListener","removeEventListener","dataToSave","setItem","stringify","getSubjectById","find","s","getGradesBySubject","filter","g","calculateAverageGrade","length","totalWeight","reduce","sum","grade","weightedSum","Math","round","getSubjectAverageGrade","subjectGrades","getAttendanceRate","totalClasses","attendedClasses","getCompletedTasksCount","task","getTotalTasksCount","getUnreadNotificationsCount","notif","getScheduleForDay","dayIndex","daySchedule","Object","entries","map","classInfo","subject","getTasksForToday","today","getOverdueTasks","getUpcomingTasks","nextWeek","updateStudent","newData","addGrade","newGrade","gradeWithId","notification","updateGrade","gradeId","newValue","addTask","newTask","taskWithId","updateTask","taskId","updates","deleteTask","addQuickTask","trim","updateTaskTitle","newTitle","toggleTaskCompleted","markNotificationAsRead","notificationId","markAllNotificationsAsRead","deleteNotification","addNews","newNews","newsWithId","updateSettings","newSettings","addAchievement","newAchievement","achievementWithId","getGradesChartData","months","baseGrades","attendance","activity","assignments","month","index","trend","getSubjectsChartData","slice","avgGrade","complexity","substring","fullName","random","progress","difficulty","getPerformanceAnalytics","currentMonth","getMonth","data","i","monthIndex","max","min","push","performance","quality","effort","consistency","getSubjectDistribution","totalCredits","percentage","status","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stanislavmamaev/Documents/Работа/WebShtorm/web_site_react/src/contexts/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { format, addDays, subDays } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  // Базовые данные студента\r\n  const [student, setStudent] = useState({\r\n    id: 1,\r\n    firstName: 'Александр',\r\n    lastName: 'Петров',\r\n    email: 'alex.petrov@student.university.ru',\r\n    phone: '+7 (999) 123-45-67',\r\n    birthDate: '1998-03-15',\r\n    address: 'г. Москва, ул. Студенческая, д. 10, кв. 25',\r\n    group: 'SE',\r\n    course: 1,\r\n    specialty: 'Информационные технологии',\r\n    bio: 'Студент 3 курса факультета информационных технологий. Увлекаюсь программированием и веб-разработкой.',\r\n    avatar: null,\r\n    enrollmentDate: '2021-09-01'\r\n  });\r\n\r\n  // Предметы\r\n  const [subjects] = useState([\r\n    { id: 1, name: 'Программирование', teacher: 'Иванов А.А.', credits: 4, color: '#3b82f6' },\r\n    { id: 2, name: 'Математический анализ', teacher: 'Петрова М.В.', credits: 3, color: '#10b981' },\r\n    { id: 3, name: 'Веб-разработка', teacher: 'Волков Д.М.', credits: 3, color: '#f59e0b' },\r\n    { id: 4, name: 'Базы данных', teacher: 'Козлов В.П.', credits: 4, color: '#8b5cf6' },\r\n    { id: 5, name: 'Алгоритмы и структуры данных', teacher: 'Иванов А.А.', credits: 3, color: '#ef4444' },\r\n    { id: 6, name: 'Английский язык', teacher: 'Смирнова О.И.', credits: 2, color: '#06b6d4' },\r\n    { id: 7, name: 'Физика', teacher: 'Николаев С.С.', credits: 3, color: '#84cc16' },\r\n    { id: 8, name: 'Философия', teacher: 'Морозова Л.К.', credits: 2, color: '#f97316' },\r\n    { id: 9, name: 'История', teacher: 'Белова Н.Р.', credits: 2, color: '#ec4899' },\r\n    { id: 10, name: 'Физическая культура', teacher: 'Соколов И.Н.', credits: 1, color: '#14b8a6' }\r\n  ]);\r\n\r\n  // Оценки\r\n  const [grades, setGrades] = useState([\r\n    { id: 1, subjectId: 1, value: 5, date: '2024-03-01', type: 'exam', weight: 1.0 },\r\n    { id: 2, subjectId: 1, value: 4, date: '2024-02-15', type: 'lab', weight: 0.5 },\r\n    { id: 3, subjectId: 1, value: 5, date: '2024-02-01', type: 'homework', weight: 0.3 },\r\n    { id: 4, subjectId: 2, value: 4, date: '2024-03-05', type: 'exam', weight: 1.0 },\r\n    { id: 5, subjectId: 2, value: 5, date: '2024-02-20', type: 'test', weight: 0.7 },\r\n    { id: 6, subjectId: 3, value: 5, date: '2024-03-10', type: 'project', weight: 1.0 },\r\n    { id: 7, subjectId: 3, value: 4, date: '2024-02-25', type: 'lab', weight: 0.5 },\r\n    { id: 8, subjectId: 4, value: 4, date: '2024-03-08', type: 'exam', weight: 1.0 },\r\n    { id: 9, subjectId: 4, value: 5, date: '2024-02-18', type: 'lab', weight: 0.5 },\r\n    { id: 10, subjectId: 5, value: 3, date: '2024-02-10', type: 'test', weight: 0.7 }\r\n  ]);\r\n\r\n  // Расписание\r\n  const [schedule] = useState({\r\n    0: { // Понедельник\r\n      '09:00': { subjectId: 1, type: 'Лекция', room: 'Ауд. 205', duration: 90 },\r\n      '10:45': { subjectId: 2, type: 'Семинар', room: 'Ауд. 301', duration: 90 },\r\n      '12:30': { subjectId: 6, type: 'Практика', room: 'Ауд. 112', duration: 90 }\r\n    },\r\n    1: { // Вторник\r\n      '09:00': { subjectId: 4, type: 'Лекция', room: 'Ауд. 308', duration: 90 },\r\n      '10:45': { subjectId: 7, type: 'Лабораторная', room: 'Лаб. 15', duration: 90 }\r\n    },\r\n    2: { // Среда\r\n      '09:00': { subjectId: 5, type: 'Лекция', room: 'Ауд. 205', duration: 90 },\r\n      '12:30': { subjectId: 8, type: 'Семинар', room: 'Ауд. 401', duration: 90 }\r\n    },\r\n    3: { // Четверг\r\n      '10:45': { subjectId: 3, type: 'Практика', room: 'Комп. класс 1', duration: 90 },\r\n      '14:15': { subjectId: 9, type: 'Лекция', room: 'Ауд. 201', duration: 90 }\r\n    },\r\n    4: { // Пятница\r\n      '09:00': { subjectId: 1, type: 'Практика', room: 'Комп. класс 2', duration: 90 },\r\n      '10:45': { subjectId: 2, type: 'Лекция', room: 'Ауд. 301', duration: 90 }\r\n    },\r\n    5: { // Суббота\r\n      '09:00': { subjectId: 10, type: 'Практика', room: 'Спортзал', duration: 90 }\r\n    }\r\n  });\r\n\r\n  // Задачи\r\n  const [tasks, setTasks] = useState([\r\n    { \r\n      id: 1, \r\n      title: 'Сдать лабораторную по программированию', \r\n      subjectId: 1, \r\n      completed: false, \r\n      priority: 'high', \r\n      dueDate: '2024-03-20',\r\n      createdAt: '2024-03-15'\r\n    },\r\n    { \r\n      id: 2, \r\n      title: 'Прочитать главу 5 по математике', \r\n      subjectId: 2, \r\n      completed: true, \r\n      priority: 'medium', \r\n      dueDate: '2024-03-18',\r\n      createdAt: '2024-03-10'\r\n    },\r\n    { \r\n      id: 3, \r\n      title: 'Подготовить презентацию по веб-разработке', \r\n      subjectId: 3, \r\n      completed: false, \r\n      priority: 'high', \r\n      dueDate: '2024-03-25',\r\n      createdAt: '2024-03-16'\r\n    },\r\n    { \r\n      id: 4, \r\n      title: 'Повторить алгоритмы сортировки', \r\n      subjectId: 5, \r\n      completed: false, \r\n      priority: 'low', \r\n      dueDate: '2024-03-22',\r\n      createdAt: '2024-03-14'\r\n    },\r\n    { \r\n      id: 5, \r\n      title: 'Выполнить практическую работу по БД', \r\n      subjectId: 4, \r\n      completed: false, \r\n      priority: 'medium', \r\n      dueDate: '2024-03-21',\r\n      createdAt: '2024-03-12'\r\n    }\r\n  ]);\r\n\r\n  // Уведомления\r\n  const [notifications, setNotifications] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'urgent',\r\n      title: 'Изменения в расписании',\r\n      message: 'Занятие по математике 16 марта переносится на 14:00',\r\n      time: '10 минут назад',\r\n      read: false,\r\n      timestamp: new Date(Date.now() - 10 * 60 * 1000),\r\n      relatedSubjectId: 2\r\n    },\r\n    {\r\n      id: 2,\r\n      type: 'info',\r\n      title: 'Новое задание',\r\n      message: 'Преподаватель добавил новое задание по программированию',\r\n      time: '1 час назад',\r\n      read: false,\r\n      timestamp: new Date(Date.now() - 60 * 60 * 1000),\r\n      relatedSubjectId: 1\r\n    },\r\n    {\r\n      id: 3,\r\n      type: 'success',\r\n      title: 'Оценка выставлена',\r\n      message: 'За лабораторную работу №3 по базам данных выставлена оценка \"отлично\"',\r\n      time: '3 часа назад',\r\n      read: true,\r\n      timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000),\r\n      relatedSubjectId: 4\r\n    },\r\n    {\r\n      id: 4,\r\n      type: 'warning',\r\n      title: 'Приближается дедлайн',\r\n      message: 'До сдачи курсовой работы осталось 3 дня',\r\n      time: '6 часов назад',\r\n      read: false,\r\n      timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n      relatedSubjectId: 3\r\n    }\r\n  ]);\r\n\r\n  // Новости\r\n  const [news, setNews] = useState([\r\n    {\r\n      id: 1,\r\n      title: 'Новая система электронного обучения',\r\n      content: 'Университет запускает новую платформу для дистанционного обучения. Система включает в себя интерактивные лекции, онлайн-тестирование и возможность обратной связи с преподавателями в реальном времени.',\r\n      fullContent: 'Университет анонсировал запуск революционной системы электронного обучения, которая станет новым стандартом образования. Платформа разработана с учетом современных требований и включает множество инновационных функций для студентов и преподавателей.',\r\n      date: '15 мар 2024',\r\n      author: 'Администрация',\r\n      category: 'academic',\r\n      image: null,\r\n      tags: ['образование', 'технологии', 'онлайн']\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Студенческая научная конференция',\r\n      content: 'Приглашаем всех студентов принять участие в ежегодной конференции \"Молодая наука - 2024\". Прием заявок до 25 марта.',\r\n      fullContent: 'Научная конференция \"Молодая наука - 2024\" пройдет в формате очно-заочного участия. Студенты смогут представить свои исследования в различных секциях по информационным технологиям, математике и другим дисциплинам.',\r\n      date: '10 мар 2024',\r\n      author: 'Научная часть',\r\n      category: 'events',\r\n      image: null,\r\n      tags: ['конференция', 'наука', 'студенты']\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Изменения в расписании',\r\n      content: 'Внимание! С 18 марта временно изменяется расписание занятий для групп ИТ-21 и ИТ-22 в связи с ремонтными работами.',\r\n      fullContent: 'В связи с плановыми ремонтными работами в учебном корпусе №2, администрация уведомляет об изменениях в расписании. Занятия будут перенесены в резервные аудитории.',\r\n      date: '8 мар 2024',\r\n      author: 'Учебная часть',\r\n      category: 'announcements',\r\n      image: null,\r\n      tags: ['расписание', 'ремонт', 'важно']\r\n    }\r\n  ]);\r\n\r\n  // Достижения\r\n  const [achievements, setAchievements] = useState([\r\n    { \r\n      id: 1,\r\n      title: 'Отличник учёбы', \r\n      description: 'За высокие академические результаты', \r\n      date: '2024-01-15', \r\n      icon: '🏆',\r\n      criteria: 'average_grade >= 4.5'\r\n    },\r\n    { \r\n      id: 2,\r\n      title: 'Лучший проект', \r\n      description: 'За инновационный веб-проект', \r\n      date: '2023-12-10', \r\n      icon: '💻',\r\n      criteria: 'project_grade >= 5'\r\n    },\r\n    { \r\n      id: 3,\r\n      title: 'Активный студент', \r\n      description: 'За участие в студенческой жизни', \r\n      date: '2023-10-05', \r\n      icon: '⭐',\r\n      criteria: 'activity_score >= 80'\r\n    }\r\n  ]);\r\n\r\n  // Настройки\r\n  const [settings, setSettings] = useState({\r\n    emailNotifications: true,\r\n    pushNotifications: false,\r\n    weeklyReport: true,\r\n    gradeNotifications: true,\r\n    theme: 'light',\r\n    language: 'ru'\r\n  });\r\n\r\n  // Загрузка данных из localStorage при инициализации\r\n  useEffect(() => {\r\n    const savedData = localStorage.getItem('uniportal_data');\r\n    if (savedData) {\r\n      try {\r\n        const parsedData = JSON.parse(savedData);\r\n        if (parsedData.student) setStudent(parsedData.student);\r\n        if (parsedData.grades) setGrades(parsedData.grades);\r\n        if (parsedData.tasks) setTasks(parsedData.tasks);\r\n        if (parsedData.notifications) setNotifications(parsedData.notifications);\r\n        if (parsedData.news) setNews(parsedData.news);\r\n        if (parsedData.achievements) setAchievements(parsedData.achievements);\r\n        if (parsedData.settings) setSettings(parsedData.settings);\r\n      } catch (error) {\r\n        console.error('Ошибка загрузки данных:', error);\r\n      }\r\n    }\r\n    \r\n    // Синхронизация с данными профиля\r\n    syncWithProfile();\r\n  }, []);\r\n\r\n  // Синхронизация с данными профиля\r\n  const syncWithProfile = () => {\r\n    const profileData = localStorage.getItem('studentProfile');\r\n    if (profileData) {\r\n      try {\r\n        const parsedProfile = JSON.parse(profileData);\r\n        setStudent(prev => ({\r\n          ...prev,\r\n          firstName: parsedProfile.firstName || prev.firstName,\r\n          lastName: parsedProfile.lastName || prev.lastName,\r\n          email: parsedProfile.email || prev.email,\r\n          phone: parsedProfile.phone || prev.phone,\r\n          birthDate: parsedProfile.birthDate || prev.birthDate,\r\n          group: parsedProfile.group || prev.group,\r\n          course: parsedProfile.course || prev.course,\r\n          specialty: parsedProfile.specialty || prev.specialty,\r\n          bio: parsedProfile.bio || prev.bio,\r\n          avatar: parsedProfile.avatar || prev.avatar\r\n        }));\r\n      } catch (error) {\r\n        console.error('Ошибка синхронизации с профилем:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Слушаем изменения в localStorage профиля\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'studentProfile') {\r\n        syncWithProfile();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  // Сохранение данных в localStorage при изменении\r\n  useEffect(() => {\r\n    const dataToSave = {\r\n      student,\r\n      grades,\r\n      tasks,\r\n      notifications,\r\n      news,\r\n      achievements,\r\n      settings\r\n    };\r\n    localStorage.setItem('uniportal_data', JSON.stringify(dataToSave));\r\n  }, [student, grades, tasks, notifications, news, achievements, settings]);\r\n\r\n  // Вычисляемые значения\r\n  const getSubjectById = (id) => subjects.find(s => s.id === id);\r\n  \r\n  const getGradesBySubject = (subjectId) => \r\n    grades.filter(g => g.subjectId === subjectId);\r\n  \r\n  const calculateAverageGrade = () => {\r\n    if (grades.length === 0) return 0;\r\n    const totalWeight = grades.reduce((sum, grade) => sum + grade.weight, 0);\r\n    const weightedSum = grades.reduce((sum, grade) => sum + grade.value * grade.weight, 0);\r\n    return Math.round((weightedSum / totalWeight) * 10) / 10;\r\n  };\r\n\r\n  const getSubjectAverageGrade = (subjectId) => {\r\n    const subjectGrades = getGradesBySubject(subjectId);\r\n    if (subjectGrades.length === 0) return null;\r\n    const totalWeight = subjectGrades.reduce((sum, grade) => sum + grade.weight, 0);\r\n    const weightedSum = subjectGrades.reduce((sum, grade) => sum + grade.value * grade.weight, 0);\r\n    return Math.round((weightedSum / totalWeight) * 10) / 10;\r\n  };\r\n\r\n  const getAttendanceRate = () => {\r\n    // Симуляция расчета посещаемости\r\n    const totalClasses = 48;\r\n    const attendedClasses = 44;\r\n    return Math.round((attendedClasses / totalClasses) * 100);\r\n  };\r\n\r\n  const getCompletedTasksCount = () => \r\n    tasks.filter(task => task.completed).length;\r\n\r\n  const getTotalTasksCount = () => tasks.length;\r\n\r\n  const getUnreadNotificationsCount = () => \r\n    notifications.filter(notif => !notif.read).length;\r\n\r\n  const getScheduleForDay = (dayIndex) => {\r\n    const daySchedule = schedule[dayIndex] || {};\r\n    return Object.entries(daySchedule).map(([time, classInfo]) => ({\r\n      time,\r\n      ...classInfo,\r\n      subject: getSubjectById(classInfo.subjectId)\r\n    }));\r\n  };\r\n\r\n  const getTasksForToday = () => {\r\n    const today = format(new Date(), 'yyyy-MM-dd');\r\n    return tasks.filter(task => task.dueDate === today);\r\n  };\r\n\r\n  const getOverdueTasks = () => {\r\n    const today = format(new Date(), 'yyyy-MM-dd');\r\n    return tasks.filter(task => task.dueDate < today && !task.completed);\r\n  };\r\n\r\n  const getUpcomingTasks = () => {\r\n    const today = format(new Date(), 'yyyy-MM-dd');\r\n    const nextWeek = format(addDays(new Date(), 7), 'yyyy-MM-dd');\r\n    return tasks.filter(task => task.dueDate > today && task.dueDate <= nextWeek);\r\n  };\r\n\r\n  // Функции для изменения данных\r\n  const updateStudent = (newData) => {\r\n    setStudent(prev => ({ ...prev, ...newData }));\r\n  };\r\n\r\n  const addGrade = (newGrade) => {\r\n    const gradeWithId = { ...newGrade, id: Date.now() };\r\n    setGrades(prev => [...prev, gradeWithId]);\r\n    \r\n    // Создаем уведомление о новой оценке\r\n    const subject = getSubjectById(newGrade.subjectId);\r\n    const notification = {\r\n      id: Date.now() + 1,\r\n      type: 'success',\r\n      title: 'Новая оценка',\r\n      message: `Выставлена оценка ${newGrade.value} по предмету \"${subject.name}\"`,\r\n      time: 'Только что',\r\n      read: false,\r\n      timestamp: new Date(),\r\n      relatedSubjectId: newGrade.subjectId\r\n    };\r\n    setNotifications(prev => [notification, ...prev]);\r\n  };\r\n\r\n  const updateGrade = (gradeId, newValue) => {\r\n    setGrades(prev => prev.map(grade => \r\n      grade.id === gradeId ? { ...grade, value: newValue } : grade\r\n    ));\r\n  };\r\n\r\n  const addTask = (newTask) => {\r\n    const taskWithId = { \r\n      ...newTask, \r\n      id: Date.now(), \r\n      createdAt: format(new Date(), 'yyyy-MM-dd') \r\n    };\r\n    setTasks(prev => [...prev, taskWithId]);\r\n  };\r\n\r\n  const updateTask = (taskId, updates) => {\r\n    setTasks(prev => prev.map(task => \r\n      task.id === taskId ? { ...task, ...updates } : task\r\n    ));\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks(prev => prev.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  // Функции для быстрого редактирования задач\r\n  const addQuickTask = (title) => {\r\n    if (!title.trim()) return;\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title: title.trim(),\r\n      subjectId: null,\r\n      completed: false,\r\n      priority: 'medium',\r\n      dueDate: format(new Date(), 'yyyy-MM-dd'),\r\n      createdAt: format(new Date(), 'yyyy-MM-dd')\r\n    };\r\n    setTasks(prev => [...prev, newTask]);\r\n    return newTask.id;\r\n  };\r\n\r\n  const updateTaskTitle = (taskId, newTitle) => {\r\n    if (!newTitle.trim()) {\r\n      deleteTask(taskId);\r\n      return;\r\n    }\r\n    setTasks(prev => prev.map(task => \r\n      task.id === taskId ? { ...task, title: newTitle.trim() } : task\r\n    ));\r\n  };\r\n\r\n  const toggleTaskCompleted = (taskId) => {\r\n    setTasks(prev => prev.map(task => \r\n      task.id === taskId ? { ...task, completed: !task.completed } : task\r\n    ));\r\n  };\r\n\r\n  const markNotificationAsRead = (notificationId) => {\r\n    setNotifications(prev => prev.map(notif => \r\n      notif.id === notificationId ? { ...notif, read: true } : notif\r\n    ));\r\n  };\r\n\r\n  const markAllNotificationsAsRead = () => {\r\n    setNotifications(prev => prev.map(notif => ({ ...notif, read: true })));\r\n  };\r\n\r\n  const deleteNotification = (notificationId) => {\r\n    setNotifications(prev => prev.filter(notif => notif.id !== notificationId));\r\n  };\r\n\r\n  const addNews = (newNews) => {\r\n    const newsWithId = { ...newNews, id: Date.now() };\r\n    setNews(prev => [newsWithId, ...prev]);\r\n  };\r\n\r\n  const updateSettings = (newSettings) => {\r\n    setSettings(prev => ({ ...prev, ...newSettings }));\r\n  };\r\n\r\n  const addAchievement = (newAchievement) => {\r\n    const achievementWithId = { ...newAchievement, id: Date.now() };\r\n    setAchievements(prev => [...prev, achievementWithId]);\r\n  };\r\n\r\n  // Статистические данные для диаграмм\r\n  const getGradesChartData = () => {\r\n    const months = ['Сен', 'Окт', 'Ноя', 'Дек', 'Янв', 'Фев', 'Мар'];\r\n    \r\n    // Создаем реалистичную прогрессию с трендом улучшения\r\n    const baseGrades = [3.6, 3.8, 4.1, 4.3, 4.5, 4.6, 4.7];\r\n    const attendance = [82, 85, 88, 90, 92, 94, 95];\r\n    const activity = [65, 70, 75, 80, 85, 87, 90];\r\n    const assignments = [8, 10, 12, 14, 16, 18, 20];\r\n    \r\n    return months.map((month, index) => ({\r\n      month,\r\n      grade: baseGrades[index],\r\n      attendance: attendance[index],\r\n      activity: activity[index],\r\n      assignments: assignments[index],\r\n      trend: index > 0 ? baseGrades[index] - baseGrades[index - 1] : 0\r\n    }));\r\n  };\r\n\r\n  const getSubjectsChartData = () => {\r\n    return subjects.slice(0, 6).map(subject => {\r\n      const avgGrade = getSubjectAverageGrade(subject.id);\r\n      const complexity = {\r\n        1: 85, // Программирование\r\n        2: 78, // Математический анализ\r\n        3: 92, // Веб-разработка\r\n        4: 88, // Базы данных\r\n        5: 82, // Алгоритмы\r\n        6: 95  // Английский язык\r\n      };\r\n      \r\n      return {\r\n        name: subject.name.length > 15 ? subject.name.substring(0, 15) + '...' : subject.name,\r\n        fullName: subject.name,\r\n        grade: avgGrade || (3.5 + Math.random() * 1.5),\r\n        progress: complexity[subject.id] || 85,\r\n        credits: subject.credits,\r\n        color: subject.color,\r\n        difficulty: subject.id === 2 || subject.id === 5 ? 'hard' : \r\n                   subject.id === 6 || subject.id === 10 ? 'easy' : 'medium'\r\n      };\r\n    });\r\n  };\r\n\r\n  const getPerformanceAnalytics = () => {\r\n    const currentMonth = new Date().getMonth();\r\n    const months = ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'];\r\n    \r\n    // Данные за последние 12 месяцев\r\n    const data = [];\r\n    for (let i = 11; i >= 0; i--) {\r\n      const monthIndex = (currentMonth - i + 12) % 12;\r\n      const progress = Math.max(0, Math.min(100, 60 + (11 - i) * 3 + Math.random() * 10));\r\n      \r\n      data.push({\r\n        month: months[monthIndex],\r\n        performance: Math.round(progress * 10) / 10,\r\n        quality: Math.round((progress * 0.9 + Math.random() * 10) * 10) / 10,\r\n        effort: Math.round((progress * 1.1 - Math.random() * 5) * 10) / 10,\r\n        consistency: Math.round((85 + Math.random() * 15) * 10) / 10\r\n      });\r\n    }\r\n    \r\n    return data;\r\n  };\r\n\r\n  const getSubjectDistribution = () => {\r\n    const totalCredits = subjects.reduce((sum, subject) => sum + subject.credits, 0);\r\n    \r\n    return subjects.map(subject => ({\r\n      name: subject.name,\r\n      value: subject.credits,\r\n      percentage: Math.round((subject.credits / totalCredits) * 100),\r\n      color: subject.color,\r\n      status: getSubjectAverageGrade(subject.id) >= 4.5 ? 'excellent' : \r\n              getSubjectAverageGrade(subject.id) >= 4.0 ? 'good' : \r\n              getSubjectAverageGrade(subject.id) >= 3.5 ? 'satisfactory' : 'needs_improvement'\r\n    }));\r\n  };\r\n\r\n  const value = {\r\n    // Данные\r\n    student,\r\n    subjects,\r\n    grades,\r\n    schedule,\r\n    tasks,\r\n    notifications,\r\n    news,\r\n    achievements,\r\n    settings,\r\n    \r\n    // Вычисляемые значения\r\n    getSubjectById,\r\n    getGradesBySubject,\r\n    calculateAverageGrade,\r\n    getSubjectAverageGrade,\r\n    getAttendanceRate,\r\n    getCompletedTasksCount,\r\n    getTotalTasksCount,\r\n    getUnreadNotificationsCount,\r\n    getScheduleForDay,\r\n    getTasksForToday,\r\n    getOverdueTasks,\r\n    getUpcomingTasks,\r\n    getGradesChartData,\r\n    getSubjectsChartData,\r\n    getPerformanceAnalytics,\r\n    getSubjectDistribution,\r\n    \r\n    // Функции изменения данных\r\n    updateStudent,\r\n    addGrade,\r\n    updateGrade,\r\n    addTask,\r\n    updateTask,\r\n    deleteTask,\r\n    addQuickTask,\r\n    updateTaskTitle,\r\n    toggleTaskCompleted,\r\n    markNotificationAsRead,\r\n    markAllNotificationsAsRead,\r\n    deleteNotification,\r\n    addNews,\r\n    updateSettings,\r\n    addAchievement,\r\n    syncWithProfile\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={value}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}