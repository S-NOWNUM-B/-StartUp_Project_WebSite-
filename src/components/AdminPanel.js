import React, { useState } from 'react';
import { useData } from '../contexts/DataContext';
import { 
  Settings, 
  Plus, 
  Star, 
  Bell, 
  FileText, 
  BarChart3,
  X,
  Check,
  AlertTriangle 
} from 'lucide-react';
import './AdminPanel.css';

const AdminPanel = ({ isOpen, onClose }) => {
  const {
    subjects,
    addGrade,
    addTask,
    addNews,
    addAchievement,
    notifications,
    calculateAverageGrade
  } = useData();

  const [activeTab, setActiveTab] = useState('grades');
  const [feedback, setFeedback] = useState('');

  const addSampleGrade = () => {
    const randomSubject = subjects[Math.floor(Math.random() * subjects.length)];
    const grades = [3, 4, 5];
    const randomGrade = grades[Math.floor(Math.random() * grades.length)];
    const types = ['exam', 'lab', 'homework', 'test'];
    const randomType = types[Math.floor(Math.random() * types.length)];
    
    const newGrade = {
      subjectId: randomSubject.id,
      value: randomGrade,
      date: new Date().toISOString().split('T')[0],
      type: randomType,
      weight: randomType === 'exam' ? 1.0 : randomType === 'test' ? 0.7 : 0.5
    };

    addGrade(newGrade);
    setFeedback(`–î–æ–±–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ ${randomGrade} –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É "${randomSubject.name}"`);
    setTimeout(() => setFeedback(''), 3000);
  };

  const addSampleTask = () => {
    const randomSubject = subjects[Math.floor(Math.random() * subjects.length)];
    const tasks = [
      '–í—ã–ø–æ–ª–Ω–∏—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É',
      '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –æ—Ç—á–µ—Ç',
      '–ò–∑—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –ª–µ–∫—Ü–∏–∏',
      '–†–µ—à–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è',
      '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É'
    ];
    const randomTask = tasks[Math.floor(Math.random() * tasks.length)];
    const priorities = ['high', 'medium', 'low'];
    const randomPriority = priorities[Math.floor(Math.random() * priorities.length)];
    
    const futureDate = new Date();
    futureDate.setDate(futureDate.getDate() + Math.floor(Math.random() * 7) + 1);
    
    const newTask = {
      title: `${randomTask} –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É "${randomSubject.name}"`,
      subjectId: randomSubject.id,
      completed: false,
      priority: randomPriority,
      dueDate: futureDate.toISOString().split('T')[0]
    };

    addTask(newTask);
    setFeedback(`–î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞: "${newTask.title}"`);
    setTimeout(() => setFeedback(''), 3000);
  };

  const addSampleNews = () => {
    const newsTypes = [
      {
        title: '–ù–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é',
        content: '–î–æ–±–∞–≤–ª–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.',
        category: 'academic',
        tags: ['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–º–∞—Ç–µ—Ä–∏–∞–ª—ã', '–æ–±—É—á–µ–Ω–∏–µ']
      },
      {
        title: '–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –∫–æ–Ω–∫—É—Ä—Å –ø—Ä–æ–µ–∫—Ç–æ–≤',
        content: '–û–±—ä—è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω–∫—É—Ä—Å –Ω–∞ –ª—É—á—à–∏–π IT-–ø—Ä–æ–µ–∫—Ç —Å—Ä–µ–¥–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.',
        category: 'events',
        tags: ['–∫–æ–Ω–∫—É—Ä—Å', '–ø—Ä–æ–µ–∫—Ç—ã', 'IT']
      },
      {
        title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–æ–∫',
        content: '–°–∏—Å—Ç–µ–º–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –∂—É—Ä–Ω–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.',
        category: 'announcements',
        tags: ['—Å–∏—Å—Ç–µ–º–∞', '–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ', '—Ñ—É–Ω–∫—Ü–∏–∏']
      }
    ];
    
    const randomNews = newsTypes[Math.floor(Math.random() * newsTypes.length)];
    
    const newNews = {
      ...randomNews,
      fullContent: randomNews.content + ' –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ.',
      date: new Date().toLocaleDateString('ru-RU'),
      author: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Ä—Ç–∞–ª–∞',
      image: null
    };

    addNews(newNews);
    setFeedback(`–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: "${newNews.title}"`);
    setTimeout(() => setFeedback(''), 3000);
  };

  const addSampleAchievement = () => {
    const achievements = [
      {
        title: '–ü–µ—Ä–≤–∞—è –æ—Ü–µ–Ω–∫–∞ "5"',
        description: '–ü–æ–ª—É—á–µ–Ω–∞ –ø–µ—Ä–≤–∞—è –æ—Ç–ª–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞',
        icon: 'üåü'
      },
      {
        title: '–ê–∫—Ç–∏–≤–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç –º–µ—Å—è—Ü–∞',
        description: '–ó–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ —É—á–µ–±–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ',
        icon: 'üèÖ'
      },
      {
        title: '–ú–∞—Å—Ç–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
        description: '–ó–∞ –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é',
        icon: 'üíª'
      }
    ];
    
    const randomAchievement = achievements[Math.floor(Math.random() * achievements.length)];
    
    const newAchievement = {
      ...randomAchievement,
      date: new Date().toLocaleDateString('ru-RU'),
      criteria: 'demo_achievement'
    };

    addAchievement(newAchievement);
    setFeedback(`–ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: "${newAchievement.title}"`);
    setTimeout(() => setFeedback(''), 3000);
  };

  const getStatistics = () => {
    return {
      averageGrade: calculateAverageGrade(),
      totalSubjects: subjects.length,
      unreadNotifications: notifications.filter(n => !n.read).length,
      totalNotifications: notifications.length
    };
  };

  const stats = getStatistics();

  if (!isOpen) return null;

  return (
    <div className="admin-panel-overlay">
      <div className="admin-panel">
        <div className="admin-panel-header">
          <h2>
            <Settings size={24} />
            –ü–∞–Ω–µ–ª—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
          </h2>
          <button className="close-btn" onClick={onClose}>
            <X size={20} />
          </button>
        </div>

        {feedback && (
          <div className="feedback-message">
            <Check size={16} />
            {feedback}
          </div>
        )}

        <div className="admin-tabs">
          <button 
            className={`tab ${activeTab === 'grades' ? 'active' : ''}`}
            onClick={() => setActiveTab('grades')}
          >
            <Star size={16} />
            –û—Ü–µ–Ω–∫–∏
          </button>
          <button 
            className={`tab ${activeTab === 'tasks' ? 'active' : ''}`}
            onClick={() => setActiveTab('tasks')}
          >
            <FileText size={16} />
            –ó–∞–¥–∞—á–∏
          </button>
          <button 
            className={`tab ${activeTab === 'news' ? 'active' : ''}`}
            onClick={() => setActiveTab('news')}
          >
            <Bell size={16} />
            –ù–æ–≤–æ—Å—Ç–∏
          </button>
          <button 
            className={`tab ${activeTab === 'stats' ? 'active' : ''}`}
            onClick={() => setActiveTab('stats')}
          >
            <BarChart3 size={16} />
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </button>
        </div>

        <div className="admin-content">
          {activeTab === 'grades' && (
            <div className="admin-section">
              <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∞–º–∏</h3>
              <p>–î–æ–±–∞–≤—å—Ç–µ —Å–ª—É—á–∞–π–Ω—É—é –æ—Ü–µ–Ω–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö</p>
              <div className="action-buttons">
                <button className="btn btn-primary" onClick={addSampleGrade}>
                  <Plus size={16} />
                  –î–æ–±–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É
                </button>
              </div>
              <div className="info-box">
                <AlertTriangle size={16} />
                –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ü–µ–Ω–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—Å—è —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –∏ —Å–æ–∑–¥–∞—Å—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
              </div>
            </div>
          )}

          {activeTab === 'tasks' && (
            <div className="admin-section">
              <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏</h3>
              <p>–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ —Å–∏—Å—Ç–µ–º—É</p>
              <div className="action-buttons">
                <button className="btn btn-primary" onClick={addSampleTask}>
                  <Plus size={16} />
                  –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
                </button>
              </div>
              <div className="info-box">
                <AlertTriangle size={16} />
                –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –¥–∞—à–±–æ—Ä–¥–µ –∏ —Å—á–µ—Ç—á–∏–∫–∏ –æ–±–Ω–æ–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
              </div>
            </div>
          )}

          {activeTab === 'news' && (
            <div className="admin-section">
              <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏</h3>
              <p>–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ</p>
              <div className="action-buttons">
                <button className="btn btn-primary" onClick={addSampleNews}>
                  <Plus size={16} />
                  –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
                </button>
                <button className="btn btn-secondary" onClick={addSampleAchievement}>
                  <Star size={16} />
                  –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
                </button>
              </div>
              <div className="info-box">
                <AlertTriangle size={16} />
                –ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∑—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏", –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è - –≤ –ø—Ä–æ—Ñ–∏–ª–µ
              </div>
            </div>
          )}

          {activeTab === 'stats' && (
            <div className="admin-section">
              <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h3>
              <div className="stats-grid">
                <div className="stat-card">
                  <div className="stat-label">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª</div>
                  <div className="stat-value">{stats.averageGrade}</div>
                </div>
                <div className="stat-card">
                  <div className="stat-label">–ü—Ä–µ–¥–º–µ—Ç–æ–≤</div>
                  <div className="stat-value">{stats.totalSubjects}</div>
                </div>
                <div className="stat-card">
                  <div className="stat-label">–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
                  <div className="stat-value">{stats.unreadNotifications}</div>
                </div>
                <div className="stat-card">
                  <div className="stat-label">–í—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
                  <div className="stat-value">{stats.totalNotifications}</div>
                </div>
              </div>
              <div className="info-box">
                <AlertTriangle size={16} />
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
              </div>
            </div>
          )}
        </div>

        <div className="admin-footer">
          <p>üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –ø–∞–Ω–µ–ª—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö</p>
        </div>
      </div>
    </div>
  );
};

export default AdminPanel; 